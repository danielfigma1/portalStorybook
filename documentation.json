{
    "pipes": [],
    "interfaces": [
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-a984a6ec4c8a8b74b70fabf2267d8bef89af7574be1266e520593fef24a6d8e2773ad82da02b17e0865879093bd89047a8b11cb51b4468a7c2e3c07e39d4aa13",
            "file": "src/stories/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport {MatTableModule} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n\n@Component({\n  selector: 'bauer-table',\n  standalone:true,\n  imports: [MatTableModule],\n  template:`\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n<!--- Note that these columns can be defined in any order.\n      The actual rendered columns are set as a property on the row definition\" -->\n\n<!-- Position Column -->\n<ng-container matColumnDef=\"position\">\n  <th mat-header-cell *matHeaderCellDef> No. </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n</ng-container>\n\n<!-- Name Column -->\n<ng-container matColumnDef=\"name\">\n  <th mat-header-cell *matHeaderCellDef> Name </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n</ng-container>\n\n<!-- Weight Column -->\n<ng-container matColumnDef=\"weight\">\n  <th mat-header-cell *matHeaderCellDef> Weight </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n</ng-container>\n\n<!-- Symbol Column -->\n<ng-container matColumnDef=\"symbol\">\n  <th mat-header-cell *matHeaderCellDef> Symbol </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n</ng-container>\n\n<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n  `,\n  styleUrls: ['./table.css'],\n  // [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor } (click)=\"onClick.emit($event)\"\"\n})\n\nexport default class TableBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n\n\n\n// export default class TableComponent {\n  \n//   /**\n//    * Is this the principal call to action on the page?\n//    */\n//   // @Input()\n//   // primary = false;\n\n//   /**\n//    * What background color to use\n//    */\n//   // @Input()\n//   // backgroundColor?: string;\n\n//   /**\n//    * How large should the button be?\n//    */\n//   // @Input()\n//   // size: 'small' | 'medium' | 'large' = 'medium';\n\n//   /**\n//    * Button contents\n//    *\n//    * @required\n//    */\n//   @Input()\n//   label = 'Basic Table';\n\n//   /**\n//    * Optional click handler\n//    */\n//   // @Output()\n//   // onClick = new EventEmitter<Event>();\n\n//   // public get classes(): string[] {\n//   //   const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n//   //   return ['storybook-button', `storybook-button--${this.size}`, mode];\n//   // }\n// }\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "WebbgmItem",
            "id": "interface-WebbgmItem-624c150f7ba87e8161e465b5daf9f556e7a0e76b37ce0303dce01c247173b1bc86414ac0ddcf2445004d14e5ad1fb7c5a6013e63b62104c471c7c04b8c29c628",
            "file": "src/app/webbgm/webbgm-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface WebbgmItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: WebbgmItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Webbgm view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class WebbgmDataSource extends DataSource<WebbgmItem> {\n  data: WebbgmItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<WebbgmItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: WebbgmItem[]): WebbgmItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: WebbgmItem[]): WebbgmItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "WebbgmDataSource",
            "id": "class-WebbgmDataSource-624c150f7ba87e8161e465b5daf9f556e7a0e76b37ce0303dce01c247173b1bc86414ac0ddcf2445004d14e5ad1fb7c5a6013e63b62104c471c7c04b8c29c628",
            "file": "src/app/webbgm/webbgm-datasource.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface WebbgmItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: WebbgmItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the Webbgm view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class WebbgmDataSource extends DataSource<WebbgmItem> {\n  data: WebbgmItem[] = EXAMPLE_DATA;\n  paginator: MatPaginator | undefined;\n  sort: MatSort | undefined;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<WebbgmItem[]> {\n    if (this.paginator && this.sort) {\n      // Combine everything that affects the rendered data into one update\n      // stream for the data-table to consume.\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\n        .pipe(map(() => {\n          return this.getPagedData(this.getSortedData([...this.data ]));\n        }));\n    } else {\n      throw Error('Please set the paginator and sort on the data source before connecting.');\n    }\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect(): void {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: WebbgmItem[]): WebbgmItem[] {\n    if (this.paginator) {\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      return data.splice(startIndex, this.paginator.pageSize);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: WebbgmItem[]): WebbgmItem[] {\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort?.direction === 'asc';\n      switch (this.sort?.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 45
            },
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "EXAMPLE_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WebbgmItem[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | undefined",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "description": "<p>Data source for the Webbgm view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).</p>\n",
            "rawdescription": "\n\nData source for the Webbgm view. This class should\nencapsulate all logic for fetching and manipulating the displayed data\n(including sorting, pagination, and filtering).\n",
            "methods": [
                {
                    "name": "connect",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<WebbgmItem[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConnect this data source to the table. The table will only update when\nthe returned stream emits new items.\n",
                    "description": "<p>Connect this data source to the table. The table will only update when\nthe returned stream emits new items.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1576,
                                "end": 1583,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>A stream of the items to be rendered.</p>\n"
                        }
                    ]
                },
                {
                    "name": "disconnect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.\n",
                    "description": "<p> Called when the table is being destroyed. Use this function, to clean up\nany open connections or free any held resources that were set up during connect.</p>\n"
                },
                {
                    "name": "getPagedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "WebbgmItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "WebbgmItem[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPaginate the data (client-side). If you're using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Paginate the data (client-side). If you&#39;re using server-side pagination,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "WebbgmItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSortedData",
                    "args": [
                        {
                            "name": "data",
                            "type": "WebbgmItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "WebbgmItem[]",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the data (client-side). If you're using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.\n",
                    "description": "<p>Sort the data (client-side). If you&#39;re using server-side sorting,\nthis would be replaced by requesting the appropriate data from the server.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "WebbgmItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "DataSource",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-a4128151ff307069b1186a86d77b55d9e058440d21e82769295330276a11b4e34ec70d098f5c887a85ea3565ef5845ea0cc87f3f264c6f571f957d0753d4f477",
            "file": "src/stories/accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bauer-accordion",
            "styleUrls": [
                "./accordion.css"
            ],
            "styles": [],
            "template": "<mat-accordion>\n    <mat-expansion-panel [expanded]=\"isOpen\" [ngClass]=\"activeTheme\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{ label }}\n            </mat-panel-title>\n            <!-- <mat-panel-description>\n                Currently I am {{panelOpenState ? 'open' : 'closed'}}\n            </mat-panel-description> -->\n        </mat-expansion-panel-header>\n        <p>I'm visible because I am open</p>\n    </mat-expansion-panel>\n</mat-accordion>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Accordion'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "panelOpenState",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'blue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "\"blue\" | \"dark\" | \"light\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@Component({\r\n  selector: 'bauer-accordion',\r\n  standalone:true,\r\n  imports: [MatExpansionModule,BrowserAnimationsModule,NoopAnimationsModule],\r\n  template: `\r\n    <mat-accordion>\r\n        <mat-expansion-panel [expanded]=\"isOpen\" [ngClass]=\"activeTheme\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    {{ label }}\r\n                </mat-panel-title>\r\n                <!-- <mat-panel-description>\r\n                    Currently I am {{panelOpenState ? 'open' : 'closed'}}\r\n                </mat-panel-description> -->\r\n            </mat-expansion-panel-header>\r\n            <p>I'm visible because I am open</p>\r\n        </mat-expansion-panel>\r\n    </mat-accordion>\r\n  `,\r\n  styleUrls: ['./accordion.css'],\r\n  \r\n})\r\n\r\n\r\nexport default class AccordionComponent {\r\n    @Input()\r\n    panelOpenState = true;\r\n\r\n    @Input()\r\n    theme: 'blue' | 'dark' | 'light'= 'blue';\r\n\r\n    @Input()\r\n    label = 'Accordion';\r\n\r\n    public get isOpen(): boolean {\r\n        const mode = this.panelOpenState ? true : false;\r\n        return mode;\r\n    }\r\n\r\n    public get activeTheme(): string {\r\n        const thisTheme = this.theme;\r\n        return thisTheme;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');\r\n\r\n/* \r\n  Color Theme \r\n  ------------------------\r\n  Blue\r\n    Primary: #004477\r\n    Secondary: #F3C200\r\n    Text: #333333\r\n    Body: #F2F2F2\r\n\r\n  Dark\r\n    Primary: #303030\r\n    Secondary: #F3C200\r\n    Text: #FFFFFF\r\n    Body: #424242\r\n*/\r\n\r\n:root {\r\n  --primary-color: #004477;\r\n  --secondary-color: #F3C200;\r\n  --text-color: #333333;\r\n  --body-color: #F2F2F2;\r\n  --table-stroke-color: #DFDFDF;\r\n}\r\n\r\nbody{\r\n  font-family: 'Roboto', sans-serif;\r\n  background: #F2F2F2;\r\n}\r\n\r\n.mat-expansion-panel-header {\r\n  background: #F2F2F2;\r\n  font-size: 18px;\r\n  color: #333333;\r\n  border: #DFDFDF;\r\n}\r\n\r\n.mat-accordion .mat-expansion-panel:last-of-type {\r\n  border-bottom-right-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n\r\n.mat-accordion .mat-expansion-panel:first-of-type {\r\n  border-top-right-radius: 0;\r\n  border-top-left-radius: 0;\r\n}\r\n\r\n.mat-expansion-panel-header-title{\r\n  font-size: 18px;\r\n}\r\n\r\n/* Dark */\r\n\r\n.mat-expansion-panel.dark{\r\n  background: #424242;\r\n  color: #FFFFFF;\r\n}\r\n\r\n.mat-expansion-panel.dark .mat-expansion-panel-header{\r\n  background: #303030;\r\n  color: #FFFFFF;\r\n}\r\n\r\n.mat-expansion-panel.dark .mat-expansion-panel-header .mat-expansion-panel-header-title{\r\n  color: #FFFFFF;\r\n}\r\n\r\n.mat-expansion-panel.dark .mat-expansion-panel-header .mat-expansion-panel-header-description, .mat-expansion-indicator::after{\r\n  color: #FFFFFF;\r\n}",
                    "styleUrl": "./accordion.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isOpen": {
                    "name": "isOpen",
                    "getSignature": {
                        "name": "isOpen",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 39
                    }
                },
                "activeTheme": {
                    "name": "activeTheme",
                    "getSignature": {
                        "name": "activeTheme",
                        "type": "string",
                        "returnType": "string",
                        "line": 44
                    }
                }
            }
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-339218c2a9bf26cceea3da5728672a46ea27886c47b90c819cd88cf04c40adae73f6e2afe02c171efe50b243c2919187fd1316db9b77321511393ad47fc15982",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css",
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "disableRipple",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "mainContent",
                    "defaultValue": "270",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "sideNav",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sideNavOpen",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "toggleControl",
                    "defaultValue": "new FormControl(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sideNavMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n// import { MatDialog } from '@angular/material/dialog';\n// import { SampleDialogComponent } from './sample-dialog/sample-dialog.component';\n// import { OverlayContainer } from '@angular/cdk/overlay';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css','./app.component.scss'],\n})\n\nexport class AppComponent implements OnInit {\n  // @HostBinding('class') className = '';\n  className = '';\n  sideNav = true;\n  toggleControl = new FormControl(false);\n\n  // constructor(private dialog: MatDialog, private overlay: OverlayContainer) { }\n\n  ngOnInit(): void {\n    this.toggleControl.valueChanges.subscribe((darkMode) => {\n      const darkClassName = 'darkMode';\n      this.className = darkMode ? darkClassName : '';\n      // if (darkMode) {\n      //   this.overlay.getContainerElement().classList.add(darkClassName);\n      // } else {\n      //   this.overlay.getContainerElement().classList.remove(darkClassName);\n      // }\n    });\n  }\n\n  showDialog(): void {\n    // this.dialog.open(SampleDialogComponent,\n    //   {\n    //     width: '500px'\n    //   });\n  }\n  \n  sideNavOpen = true;\n  mainContent = 270;\n  disableRipple = true;\n\n  \n  sideNavMenu(){\n    console.log(this.sideNavOpen);\n    this.sideNavOpen = !this.sideNavOpen;\n\n    if(this.sideNavOpen){\n      this.mainContent =  270\n    } else {\n      this.mainContent = 90\n    }\n  }\n\n  \n\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* .mat-drawer {\r\n    width: 270px;\r\n}\r\n\r\n.mat-icon{\r\n    padding-right: 5px;\r\n}\r\n\r\nmat-sidenav:not(.mat-drawer-opened) {\r\n    transform: translate3d(0, 0, 0) !important;\r\n    visibility: visible !important;\r\n    width: 60px !important;\r\n    overflow: hidden;\r\n} */\r\n\r\n/* //////////// */\r\n\r\n.button-close{\r\n    width: 100%;\r\n    bottom: 0;\r\n    position: absolute !important;\r\n  }\r\n  \r\n  .button-open{\r\n    bottom: 0;\r\n    position: absolute !important;\r\n    right: 0;\r\n  }\r\n  \r\n  .flex-expand {\r\n    flex: 1 1 auto;\r\n  }\r\n  \r\n  .mainbreadcrumb{\r\n    align-items: center;\r\n    display: flex;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .nav-title{\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .logo{\r\n    height: auto;\r\n    width: 60px;\r\n    border: 1px solid white;\r\n  }\r\n  \r\n  mat-card {\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n  }\r\n  \r\n  mat-grid-tile {\r\n    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  .mat-list-item .mat-list-item-content{\r\n    padding: 0 25px !important;\r\n  }\r\n  \r\n  :host /deep/ .mat-list-item-content {\r\n    padding: 10px 25px !important;\r\n  }\r\n  \r\n  .app-class .mat-list-item {\r\n    height: auto;\r\n  }",
                    "styleUrl": "./app.component.css"
                },
                {
                    "data": "@use '@angular/material' as mat;\r\n@import 'src/custom-theme.scss';\r\n\r\n// Custom Theme\r\n.primary-background {\r\n    background: mat-color($app-light-primary) !important;\r\n}\r\n\r\n.mainbreadcrumb .user {\r\n    color: mat-color($app-light-primary) !important;\r\n}\r\n\r\n.menu-close {\r\n    width: 90px;\r\n    transition: .1s all;\r\n}\r\n\r\n.top-nav-icon{\r\n    padding: 0 10px;\r\n    color: $light-icon;\r\n}\r\n\r\n.menu-open {\r\n    width: 270px;\r\n    transition: .1s all;\r\n}\r\n\r\n.nav-title{\r\n    transition: .5s all !important;\r\n}\r\n// .menu-close-text mat-list-item span .nav-title {\r\n//     display: initial !important;\r\n// }\r\n\r\nmat-sidenav-content {\r\n    transition: .1s all;\r\n}\r\n\r\n.toolbar{\r\n    background: $white;\r\n}\r\n\r\nmat-toolbar-row {\r\n    color: $white;\r\n    font-size: 20px;\r\n}\r\n\r\n.active {\r\n    background: mat-color($app-light-primary, 800) !important;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.active mat-icon,\r\n.active span {\r\n    color: mat-color($app-light-accent) !important;\r\n}\r\n\r\n.side-icon {\r\n    font-size: 30px !important;\r\n    height: 30px !important;\r\n    width: 30px !important;\r\n    color: $white !important;\r\n    // display: flex !important;\r\n    align-items: center !important;\r\n    padding: 0 5px !important;\r\n    transition: .5s all;\r\n}\r\n\r\n.primary-background a {\r\n    color: $white !important;\r\n}\r\n\r\n.maincontent{\r\n    padding: 50px 45px 120px 45px;\r\n    background: $light-body !important;\r\n}\r\n\r\n.footer{\r\n    padding: 30px 45px;\r\n    background: $white;\r\n}\r\n\r\n// .item-shadow{\r\n//     box-shadow: 1px 1px 2px 0px $light-shadow !important;\r\n// }\r\n\r\n.app-class .mat-list-item span {\r\n    // display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n\r\n//Dark Mode\r\n\r\n// .darkMode .item-shadow{\r\n//     box-shadow: 1px 1px 2px 0px $dark-shadow !important;\r\n// }\r\n.darkMode .side-icon {\r\n    color: $white !important;\r\n}\r\n\r\n.darkMode .maincontent{\r\n    background: $dark-body !important;\r\n}\r\n\r\n.darkMode .active {\r\n    background: mat-color($app-dark-primary, 800) !important;\r\n}\r\n\r\n.darkMode .active mat-icon,\r\n.darkMode .active span {\r\n    color: mat-color($app-dark-accent) !important;\r\n}\r\n\r\n.darkMode .primary-background,\r\n.darkMode .toolbar-logo {\r\n    background: mat-color($app-dark-primary, 500) !important;\r\n}\r\n\r\n.darkMode .footer{\r\n    background: mat-color($app-dark-primary);\r\n    color: mat.get-color-from-palette($app-dark-primary, '400-contrast') !important;\r\n}\r\n\r\n.darkMode .mainbreadcrumb .user {\r\n    color: mat-color($app-dark-accent) !important;\r\n}\r\n\r\n.darkMode .top-nav-icon{\r\n    color: $white;\r\n}\r\n\r\n.darkMode .toolbar,\r\n.darkMode mat-sidenav-content {\r\n    // background: mat-color($app-dark-primary,400) !important;\r\n    background: $dark-body;\r\n}\r\n\r\n.darkMode .themetoggle{\r\n  color: mat-color($app-dark-warn) !important;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-sidenav-container class=\"example-container\" fullscreen [ngClass]=\"className\">\n  <mat-sidenav class=\"primary-background\" mode=\"side\" opened [class.menu-open]=\"sideNavOpen\"\n    [class.menu-close]=\"!sideNavOpen\">\n    <mat-toolbar color=\"primary\" class=\"toolbar-logo\">\n      <img class=\"logo\" src=\"assets/image/logo.webp\">\n      <span [hidden]=\"!sideNavOpen\"><span style=\"padding-left:10px;\">Portal</span></span>\n    </mat-toolbar>\n    <mat-nav-list class=\"primary-background app-class\" [class.menu-close-text]=\"sideNavOpen\">\n      <a routerLink=\"dashboard\" disableRipple mat-list-item>\n        <span routerLinkActive=\"active\">\n          <button mat-icon-button>\n            <mat-icon color=\"primary\" class=\"side-icon\">home</mat-icon>\n          </button> <span class=\"nav-title\" [hidden]=\"!sideNavOpen\">Home</span>\n        </span>\n      </a>\n      <a routerLink=\"electronic\" disableRipple mat-list-item>\n        <span routerLinkActive=\"active\">\n          <button mat-icon-button>\n            <mat-icon color=\"primary\" class=\"side-icon\">point_of_sale</mat-icon>\n          </button> <span class=\"nav-title\" [hidden]=\"!sideNavOpen\"> Electronic</span>\n        </span>\n      </a>\n      <a routerLink=\"b-tronic\" disableRipple mat-list-item>\n        <span routerLinkActive=\"active\">\n          <button mat-icon-button>\n            <mat-icon color=\"primary\" class=\"side-icon\">account_balance</mat-icon>\n          </button><span class=\"nav-title\" [hidden]=\"!sideNavOpen\"> B-Tronic</span>\n        </span>\n      </a>\n      <a disableRipple routerLink=\"webbgm\" mat-list-item>\n        <span routerLinkActive=\"active\">\n          <button mat-icon-button>\n            <mat-icon color=\"primary\" class=\"side-icon\">trending_up</mat-icon>\n          </button><span class=\"nav-title\" [hidden]=\"!sideNavOpen\"> WebBGM</span>\n        </span>\n      </a>\n      <a disableRipple routerLink=\"inventory\" mat-list-item>\n        <span routerLinkActive=\"active\">\n          <button mat-icon-button>\n            <mat-icon color=\"primary\" class=\"side-icon\"> visibility</mat-icon>\n          </button><span class=\"nav-title\" [hidden]=\"!sideNavOpen\"> Inventory</span>\n        </span>\n      </a>\n      <a disableRipple routerLink=\"warehouse\" mat-list-item>\n        <span routerLinkActive=\"active\">\n          <button mat-icon-button>\n            <mat-icon color=\"primary\" class=\"side-icon\"> precision_manufacturing</mat-icon>\n          </button><span class=\"nav-title\" [hidden]=\"!sideNavOpen\"> Warehouse</span>\n        </span>\n      </a>\n      <a disableRipple routerLink=\"project\" mat-list-item>\n        <span routerLinkActive=\"active\">\n          <button mat-icon-button>\n            <mat-icon color=\"primary\" class=\"side-icon\"> today</mat-icon>\n          </button><span class=\"nav-title\" [hidden]=\"!sideNavOpen\"> Project</span>\n        </span>\n      </a>\n    </mat-nav-list>\n    <button type=\"button\" mat-icon-button [class.button-open]=\"sideNavOpen\" [class.button-close]=\"!sideNavOpen\"\n      (click)=\"sideNavMenu()\">\n      <mat-icon class=\"side-icon\" *ngIf=\"sideNavOpen\">keyboard_double_arrow_left</mat-icon>\n      <mat-icon class=\"side-icon\" *ngIf=\"!sideNavOpen\">keyboard_double_arrow_right</mat-icon>\n    </button>\n  </mat-sidenav>\n  <mat-sidenav-content [ngStyle]=\"{'margin-left.px': mainContent}\">\n    <mat-toolbar class=\"toolbar\">\n      <span class=\"mainbreadcrumb\"> Dashboard <mat-icon>arrow_forward_ios</mat-icon> <span class=\"user\">Welcome,\n          Nick</span></span>\n      <span class=\"flex-expand\"></span>\n      <mat-icon class=\"top-nav-icon\">search</mat-icon>\n      <mat-icon class=\"top-nav-icon\">widgets</mat-icon>\n      <mat-icon class=\"top-nav-icon\">notifications</mat-icon>\n\n      <mat-slide-toggle color=\"primary\" [formControl]=\"toggleControl\">\n      </mat-slide-toggle>\n    </mat-toolbar>\n    <div class=\"maincontent\" [ngClass]=\"className\">\n      <router-outlet></router-outlet>\n    </div>\n    <div class=\"footer\">\n      © Bauer 2022, All rights reserve\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>"
        },
        {
            "name": "BTronicComponent",
            "id": "component-BTronicComponent-50e4b80b07b2098305d4212046d1d8b9865f863899e310167f27f79380e22bb5a1d5c89ac6c85ad4c132cc7b2e60336c17fedc3d3dcec0af4dbc3110841a5ee3",
            "file": "src/app/b-tronic/b-tronic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-b-tronic",
            "styleUrls": [
                "./b-tronic.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./b-tronic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "longText",
                    "defaultValue": "`The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog\n  from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was\n  originally bred for hunting.`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-b-tronic',\n  templateUrl: './b-tronic.component.html',\n  styleUrls: ['./b-tronic.component.css']\n})\nexport class BTronicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  longText = `The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog\n  from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was\n  originally bred for hunting.`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\r\n    max-width: 400px;\r\n    margin-bottom: 8px;\r\n  }\r\n  ",
                    "styleUrl": "./b-tronic.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-spinner></mat-spinner>\n<!-- Cards with media area -->\n<mat-card class=\"example-card\">\n    <mat-card-title-group>\n      <mat-card-title>Shiba Inu</mat-card-title>\n      <mat-card-subtitle>Small</mat-card-subtitle>\n      <img mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n    </mat-card-title-group>\n    <mat-card-content>\n      {{longText}}\n    </mat-card-content>\n  </mat-card>\n  \n  <mat-card class=\"example-card\">\n    <mat-card-title-group>\n      <mat-card-title>Shiba Inu</mat-card-title>\n      <mat-card-subtitle>Medium</mat-card-subtitle>\n      <img mat-card-md-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n    </mat-card-title-group>\n    <mat-card-content>\n      {{longText}}\n    </mat-card-content>\n  </mat-card>\n  \n  <mat-card class=\"example-card\">\n    <mat-card-title-group>\n      <mat-card-title>Shiba Inu</mat-card-title>\n      <mat-card-subtitle>Large</mat-card-subtitle>\n      <img mat-card-lg-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n    </mat-card-title-group>\n    <mat-card-content>\n      {{longText}}\n    </mat-card-content>\n  </mat-card>\n  \n  <mat-card class=\"example-card\">\n    <mat-card-title-group>\n      <mat-card-title>Shiba Inu</mat-card-title>\n      <mat-card-subtitle>Extra large</mat-card-subtitle>\n      <img mat-card-xl-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n    </mat-card-title-group>\n    <mat-card-content>\n      {{longText}}\n    </mat-card-content>\n  </mat-card>"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-a52a983f2960dbefecb1cf9c2d1357a2c767ed85336d5aa3f48cd8d158af8f95f9cb6092a00a95a6e9b80c81ed6cf31e0100be7721c27be99bf283a767809f8c",
            "file": "src/app/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard-navigation",
            "styleUrls": [
                "./dashboard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "longText",
                    "defaultValue": "`The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog\n  from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was\n  originally bred for hunting.`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-navigation',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  ngOnInit(): void {\n  }\n  longText = `The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog\n  from Japan. A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was\n  originally bred for hunting.`;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-grid-tile{\r\n    border-radius: 10px;\r\n}\r\n\r\nmat-card {\r\n    width: 100% !important;\r\n    height: 100% !important;\r\n    /* text-align: center  !important; */\r\n}",
                    "styleUrl": "./dashboard.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-grid-list cols=\"4\" rowHeight=\"2:1\" [gutterSize]=\"'20px'\">\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card class=\"example-card\">\n      <mat-card-title-group>\n        <mat-card-title>Shiba Inu</mat-card-title>\n        <mat-card-subtitle>Small</mat-card-subtitle>\n        <img mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n      </mat-card-title-group>\n      <mat-card-content>\n        {{longText}}\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card class=\"example-card\">\n      <mat-card-title-group>\n        <mat-card-title>Shiba Inu</mat-card-title>\n        <mat-card-subtitle>Small</mat-card-subtitle>\n        <img mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n      </mat-card-title-group>\n      <mat-card-content>\n        {{longText}}\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card class=\"example-card\">\n      <mat-card-title-group>\n        <mat-card-title>Shiba Inu</mat-card-title>\n        <mat-card-subtitle>Small</mat-card-subtitle>\n        <img mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n      </mat-card-title-group>\n      <mat-card-content>\n        {{longText}}\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card class=\"example-card\">\n      <mat-card-title-group>\n        <mat-card-title>Shiba Inu</mat-card-title>\n        <mat-card-subtitle>Small</mat-card-subtitle>\n        <img mat-card-sm-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" >\n      </mat-card-title-group>\n      <mat-card-content>\n        {{longText}}\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n<br>\n<mat-grid-list cols=\"2\" rowHeight=\"2:1\" [gutterSize]=\"'20px'\">\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card>Simple card</mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card>Simple card</mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n<br>\n<mat-grid-list cols=\"1\" rowHeight=\"3:1\" [gutterSize]=\"'20px'\">\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card>Simple card</mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n<br>\n<mat-grid-list cols=\"3\" rowHeight=\"2:1\" [gutterSize]=\"'20px'\">\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card>Simple card</mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card>Simple card</mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile class=\"item-shadow\">\n    <mat-card>Simple card</mat-card>\n  </mat-grid-tile>\n</mat-grid-list>"
        },
        {
            "name": "ElectronicComponent",
            "id": "component-ElectronicComponent-baf9279883b28447b0679726a7e87a05cb9032811ef179ac57372817b16f728885d1213fa1eb02dad2c3a474e67026fc90b754088e8913873fcb311b36ca37f1",
            "file": "src/app/electronic/electronic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-electronic",
            "styleUrls": [
                "./electronic.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./electronic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-electronic',\n  templateUrl: './electronic.component.html',\n  styleUrls: ['./electronic.component.css']\n})\nexport class ElectronicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./electronic.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\n    <div class=\"example-label\">Basic</div>\n    <div class=\"example-button-row\">\n      <button mat-button>Basic</button>\n      <button mat-button color=\"primary\">Primary</button>\n      <button mat-button color=\"accent\">Accent</button>\n      <button mat-button color=\"warn\">Warn</button>\n      <button mat-button disabled>Disabled</button>\n      <a mat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Raised</div>\n    <div class=\"example-button-row\">\n      <button mat-raised-button>Basic</button>\n      <button mat-raised-button color=\"primary\">Primary</button>\n      <button mat-raised-button color=\"accent\">Accent</button>\n      <button mat-raised-button color=\"warn\">Warn</button>\n      <button mat-raised-button disabled>Disabled</button>\n      <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Stroked</div>\n    <div class=\"example-button-row\">\n      <button mat-stroked-button>Basic</button>\n      <button mat-stroked-button color=\"primary\">Primary</button>\n      <button mat-stroked-button color=\"accent\">Accent</button>\n      <button mat-stroked-button color=\"warn\">Warn</button>\n      <button mat-stroked-button disabled>Disabled</button>\n      <a mat-stroked-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Flat</div>\n    <div class=\"example-button-row\">\n      <button mat-flat-button>Basic</button>\n      <button mat-flat-button color=\"primary\">Primary</button>\n      <button mat-flat-button color=\"accent\">Accent</button>\n      <button mat-flat-button color=\"warn\">Warn</button>\n      <button mat-flat-button disabled>Disabled</button>\n      <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Icon</div>\n    <div class=\"example-button-row\">\n      <div class=\"example-flex-container\">\n        <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" aria-label=\"Example icon button with a home icon\">\n          <mat-icon>home</mat-icon>\n        </button>\n        <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a menu icon\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <button mat-icon-button color=\"warn\" aria-label=\"Example icon button with a heart icon\">\n          <mat-icon>favorite</mat-icon>\n        </button>\n        <button mat-icon-button disabled aria-label=\"Example icon button with a open in new tab icon\">\n          <mat-icon>open_in_new</mat-icon>\n        </button>\n      </div>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">FAB</div>\n    <div class=\"example-button-row\">\n      <div class=\"example-flex-container\">\n        <div class=\"example-button-container\">\n          <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n            <mat-icon>bookmark</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\">\n            <mat-icon>home</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-fab disabled aria-label=\"Example icon button with a heart icon\">\n            <mat-icon>favorite</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Mini FAB</div>\n    <div class=\"example-button-row\">\n      <div class=\"example-flex-container\">\n        <div class=\"example-button-container\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\">\n            <mat-icon>menu</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\">\n            <mat-icon>plus_one</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a filter list icon\">\n            <mat-icon>filter_list</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-mini-fab disabled aria-label=\"Example icon button with a home icon\">\n            <mat-icon>home</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </section>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-89ae898206779a44ab6d293f2ae01bb2b117fe214c4250f8a3644f009c7a03ebbe0758df039f1024eb0b41b73072fb32fafe8af92de5dd18fb237a78fb6302d9",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome\n          </span>\n          <bauer-accordion\n          [panelOpenState]=\"false\"\n          theme=\"blue\"\n          label=\"Close Accordion\"\n        ></bauer-accordion>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport AccordionComponent from './accordion.component';\n\n@Component({\n  selector: 'storybook-header',\n  standalone:true,\n  imports: [AccordionComponent],\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome\n          </span>\n          <bauer-accordion\n          [panelOpenState]=\"false\"\n          theme=\"blue\"\n          label=\"Close Accordion\"\n        ></bauer-accordion>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  // @Input()\n  // user: User | null = null;\n\n  // @Output()\n  // onLogin = new EventEmitter<Event>();\n\n  // @Output()\n  // onLogout = new EventEmitter<Event>();\n\n  // @Output()\n  // onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "InventoryComponent",
            "id": "component-InventoryComponent-2c0ef7fbecefdc6447828a5bab249df87c435aaf075fed8fe088073459b6e2b32ec958b4762193a569156a7f7fdb3f48bb9ef997b29088a7d631cfa9a0c3b649",
            "file": "src/app/inventory/inventory.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inventory",
            "styleUrls": [
                "./inventory.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./inventory.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addressForm",
                    "defaultValue": "this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n    ],\n    shipping: ['free', Validators.required]\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "hasUnitNumber",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "states",
                    "defaultValue": "[\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'}\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent {\n  addressForm = this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n    ],\n    shipping: ['free', Validators.required]\n  });\n\n  hasUnitNumber = false;\n\n  states = [\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'}\n  ];\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit(): void {\n    alert('Thanks!');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width {\n  width: 100%;\n}\n\n.shipping-card {\n  min-width: 120px;\n  margin: 20px auto;\n}\n\n.mat-radio-button {\n  display: block;\n  margin: 5px 0;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n}\n\n.col {\n  flex: 1;\n  margin-right: 20px;\n}\n\n.col:last-child {\n  margin-right: 0;\n}\n",
                    "styleUrl": "./inventory.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 86,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Shipping Information</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\n              First name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\n              Last name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\n              Address is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\n        <div class=\"col\">\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\n            + Add C/O, Apt, Suite, Unit\n          </button>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"City\" formControlName=\"city\">\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\n              City is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <mat-select placeholder=\"State\" formControlName=\"state\">\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\n                {{ state.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\n              State is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-radio-group formControlName=\"shipping\">\n            <mat-radio-button value=\"free\">Free Shipping</mat-radio-button>\n            <mat-radio-button value=\"priority\">Priority Shipping</mat-radio-button>\n            <mat-radio-button value=\"nextday\">Next Day Shipping</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n"
        },
        {
            "name": "ProjectComponent",
            "id": "component-ProjectComponent-0fc7d162b410fe1472f5761c162cf973458f8d66d63e05b9e6755cea0fce0edf364da2e728e3ddaea83fc27803aae91ba44c26511bf018d8d2ea3570cef7a183",
            "file": "src/app/project/project.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-project",
            "styleUrls": [
                "./project.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./project.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./project.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-tab-group>\n    <mat-tab label=\"First\"> Content 1 </mat-tab>\n    <mat-tab label=\"Second\"> Content 2 </mat-tab>\n    <mat-tab label=\"Third\"> Content 3 </mat-tab>\n</mat-tab-group>\n  "
        },
        {
            "name": "SampleDialogComponent",
            "id": "component-SampleDialogComponent-fff0f0a0a8dfdbd6f56b3e916339b9f692086ed2aaabfe15a6ab4d6a343d5e168c77c3b4802a4a835363a77f0ed06d06f0e391861c228b9318b101a72de5ad28",
            "file": "src/app/sample-dialog/sample-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sample-dialog",
            "styleUrls": [
                "./sample-dialog.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sample-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sample-dialog',\n  templateUrl: './sample-dialog.component.html',\n  styleUrls: ['./sample-dialog.component.css']\n})\nexport class SampleDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sample-dialog.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- <h1>Dialog title</h1>\n\n<mat-dialog-content>\n    This is just a sample dialog. Click close to dismiss!\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button mat-raised-button [mat-dialog-close]=\"true\">Close</button>\n</mat-dialog-actions> -->"
        },
        {
            "name": "TableBasicExample",
            "id": "component-TableBasicExample-a984a6ec4c8a8b74b70fabf2267d8bef89af7574be1266e520593fef24a6d8e2773ad82da02b17e0865879093bd89047a8b11cb51b4468a7c2e3c07e39d4aa13",
            "file": "src/stories/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bauer-table",
            "styleUrls": [
                "./table.css"
            ],
            "styles": [],
            "template": "<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n<!--- Note that these columns can be defined in any order.\n      The actual rendered columns are set as a property on the row definition\" -->\n\n<!-- Position Column -->\n<ng-container matColumnDef=\"position\">\n  <th mat-header-cell *matHeaderCellDef> No. </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n</ng-container>\n\n<!-- Name Column -->\n<ng-container matColumnDef=\"name\">\n  <th mat-header-cell *matHeaderCellDef> Name </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n</ng-container>\n\n<!-- Weight Column -->\n<ng-container matColumnDef=\"weight\">\n  <th mat-header-cell *matHeaderCellDef> Weight </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n</ng-container>\n\n<!-- Symbol Column -->\n<ng-container matColumnDef=\"symbol\">\n  <th mat-header-cell *matHeaderCellDef> Symbol </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n</ng-container>\n\n<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['position', 'name', 'weight', 'symbol']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport {MatTableModule} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n\n@Component({\n  selector: 'bauer-table',\n  standalone:true,\n  imports: [MatTableModule],\n  template:`\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n<!--- Note that these columns can be defined in any order.\n      The actual rendered columns are set as a property on the row definition\" -->\n\n<!-- Position Column -->\n<ng-container matColumnDef=\"position\">\n  <th mat-header-cell *matHeaderCellDef> No. </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n</ng-container>\n\n<!-- Name Column -->\n<ng-container matColumnDef=\"name\">\n  <th mat-header-cell *matHeaderCellDef> Name </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n</ng-container>\n\n<!-- Weight Column -->\n<ng-container matColumnDef=\"weight\">\n  <th mat-header-cell *matHeaderCellDef> Weight </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n</ng-container>\n\n<!-- Symbol Column -->\n<ng-container matColumnDef=\"symbol\">\n  <th mat-header-cell *matHeaderCellDef> Symbol </th>\n  <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n</ng-container>\n\n<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n  `,\n  styleUrls: ['./table.css'],\n  // [ngClass]=\"classes\" [ngStyle]=\"{ 'background-color': backgroundColor } (click)=\"onClick.emit($event)\"\"\n})\n\nexport default class TableBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n\n\n\n// export default class TableComponent {\n  \n//   /**\n//    * Is this the principal call to action on the page?\n//    */\n//   // @Input()\n//   // primary = false;\n\n//   /**\n//    * What background color to use\n//    */\n//   // @Input()\n//   // backgroundColor?: string;\n\n//   /**\n//    * How large should the button be?\n//    */\n//   // @Input()\n//   // size: 'small' | 'medium' | 'large' = 'medium';\n\n//   /**\n//    * Button contents\n//    *\n//    * @required\n//    */\n//   @Input()\n//   label = 'Basic Table';\n\n//   /**\n//    * Optional click handler\n//    */\n//   // @Output()\n//   // onClick = new EventEmitter<Event>();\n\n//   // public get classes(): string[] {\n//   //   const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n//   //   return ['storybook-button', `storybook-button--${this.size}`, mode];\n//   // }\n// }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table{\n  width: 100%;\n}\n\n.datatable-container {\n  font-family: sans-serif;\n  background-color: #303030;\n  border-radius: 3px;\n  color: white;\n  max-width: 1140px;\n  font-size: 12px;\n  padding: 10px;\n}\n\n.datatable-container .footer-tools .pages ul li {\n  display: inline-block;\n  margin: 0 2px;\n}\n\n.datatable-container .datatable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\n.datatable-container .datatable,\n.datatable-container .datatable th,\n.datatable-container .datatable td {\n  padding: 10px 10px;\n}\n\n.datatable-container .datatable th {\n  font-weight: bolder;\n  text-align: left;\n  border-bottom: solid 1px white;\n}\n\n\n\n.datatable-container .datatable tbody tr:nth-child(even) {\n  background-color: #555555;\n}\n\n.datatable-container .datatable tbody tr:hover {\n  background-color: gray;\n}\n\n\n",
                    "styleUrl": "./table.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "WarehouseComponent",
            "id": "component-WarehouseComponent-984cb3ca8468627d2bf8d402c64413ff5550722652f3387a5784ccc640a9f101e99cfd37885675d14969c7cadea5c47f40541f5c24c6bc9b00bf3901983cf9c9",
            "file": "src/app/warehouse/warehouse.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-warehouse",
            "styleUrls": [
                "./warehouse.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./warehouse.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-warehouse',\n  templateUrl: './warehouse.component.html',\n  styleUrls: ['./warehouse.component.css']\n})\nexport class WarehouseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./warehouse.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-progress-bar mode=\"indeterminate\" color=\"primary\"></mat-progress-bar>"
        },
        {
            "name": "WebbgmComponent",
            "id": "component-WebbgmComponent-17d2210984b6824fcbbc7ee2b29805c3de8fb60e26745db6bb601d34cf611a9e48a48c546daeee17c42d06d9116f62384d85d2f46a0da12635e2b63c8668da59",
            "file": "src/app/webbgm/webbgm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-webbgm",
            "styleUrls": [
                "./webbgm.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./webbgm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WebbgmDataSource",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>Columns displayed in the table. Columns IDs can be added, removed, or reordered.</p>\n",
                    "line": 19,
                    "rawdescription": "\nColumns displayed in the table. Columns IDs can be added, removed, or reordered."
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<WebbgmItem>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { WebbgmDataSource, WebbgmItem } from './webbgm-datasource';\n\n@Component({\n  selector: 'app-webbgm',\n  templateUrl: './webbgm.component.html',\n  styleUrls: ['./webbgm.component.css']\n})\nexport class WebbgmComponent implements AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatTable) table!: MatTable<WebbgmItem>;\n  dataSource: WebbgmDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  constructor() {\n    this.dataSource = new WebbgmDataSource();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".full-width-table {\n  width: 100%;\n}\n",
                    "styleUrl": "./webbgm.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data?.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20]\"\n      aria-label=\"Select page\">\n  </mat-paginator>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-573f07834798935bc5dee6f19d30d49ecf55b83e846683b691a2b1fe95c15c139ac1c5b93451a47c0b95aeb01c1363289512a285703450005139b4cd072c8356",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\n// import { SampleDialogComponent } from './sample-dialog/sample-dialog.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { SampleDialogComponent } from './sample-dialog/sample-dialog.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { ElectronicComponent } from './electronic/electronic.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BTronicComponent } from './b-tronic/b-tronic.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatTableModule} from '@angular/material/table';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { WebbgmComponent } from './webbgm/webbgm.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { WarehouseComponent } from './warehouse/warehouse.component';\nimport { ProjectComponent } from './project/project.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SampleDialogComponent,\n    ElectronicComponent,\n    BTronicComponent,\n    InventoryComponent,\n    WebbgmComponent,\n    DashboardComponent,\n    WarehouseComponent,\n    ProjectComponent\n    // SampleDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSlideToggleModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatSidenavModule,\n    MatGridListModule,\n    MatListModule,\n    LayoutModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatTabsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BTronicComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "ElectronicComponent"
                        },
                        {
                            "name": "InventoryComponent"
                        },
                        {
                            "name": "ProjectComponent"
                        },
                        {
                            "name": "SampleDialogComponent"
                        },
                        {
                            "name": "WarehouseComponent"
                        },
                        {
                            "name": "WebbgmComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-962ad618e034722d4915d8bd0274e534e09751330de4c9e2f067fd8ea8277e82bd7a9cbfac5a5ea0503b06b622d71e599c48cc0749f0c197af0a50291c0bb58d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BTronicComponent } from './b-tronic/b-tronic.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ElectronicComponent } from './electronic/electronic.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { ProjectComponent } from './project/project.component';\nimport { WarehouseComponent } from './warehouse/warehouse.component';\nimport { WebbgmComponent } from './webbgm/webbgm.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'electronic', component: ElectronicComponent },\n  { path: 'b-tronic', component: BTronicComponent },\n  { path: 'webbgm', component: WebbgmComponent },\n  { path: 'inventory', component: InventoryComponent },\n  { path: 'warehouse', component: WarehouseComponent },\n  { path: 'project', component: ProjectComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Close",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "EXAMPLE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/webbgm/webbgm-datasource.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "WebbgmItem[]",
                "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
            },
            {
                "name": "Open",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "TableDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AccordionComponent>",
                "defaultValue": "(args: AccordionComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Table>",
                "defaultValue": "(args: Table) => ({\n  props: args,\n})"
            }
        ],
        "functions": [
            {
                "name": "compare",
                "file": "src/app/webbgm/webbgm-datasource.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                "args": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "a",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "b",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isAsc",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/accordion.stories.ts": [
                {
                    "name": "Close",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Open",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AccordionComponent>",
                    "defaultValue": "(args: AccordionComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/table.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/webbgm/webbgm-datasource.ts": [
                {
                    "name": "EXAMPLE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/webbgm/webbgm-datasource.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WebbgmItem[]",
                    "defaultValue": "[\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n]"
                }
            ],
            "src/stories/table.stories.ts": [
                {
                    "name": "TableDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Table>",
                    "defaultValue": "(args: Table) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/webbgm/webbgm-datasource.ts": [
                {
                    "name": "compare",
                    "file": "src/app/webbgm/webbgm-datasource.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Simple sort comparator for example ID/Name columns (for client-side sorting).</p>\n",
                    "args": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isAsc",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/dashboard",
                        "pathMatch": "full"
                    },
                    {
                        "path": "dashboard",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "electronic",
                        "component": "ElectronicComponent"
                    },
                    {
                        "path": "b-tronic",
                        "component": "BTronicComponent"
                    },
                    {
                        "path": "webbgm",
                        "component": "WebbgmComponent"
                    },
                    {
                        "path": "inventory",
                        "component": "InventoryComponent"
                    },
                    {
                        "path": "warehouse",
                        "component": "WarehouseComponent"
                    },
                    {
                        "path": "project",
                        "component": "ProjectComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/b-tronic/b-tronic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BTronicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/electronic/electronic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElectronicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/inventory/inventory.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InventoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/sample-dialog/sample-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/warehouse/warehouse.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WarehouseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/webbgm/webbgm-datasource.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WebbgmDataSource",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/webbgm/webbgm-datasource.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WebbgmItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/webbgm/webbgm-datasource.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "compare",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/webbgm/webbgm-datasource.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EXAMPLE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/webbgm/webbgm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WebbgmComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Close",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Open",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableBasicExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TableDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}